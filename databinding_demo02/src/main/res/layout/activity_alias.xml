<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android">
    <!--3、使用了DataBinding之后的Activity的布局文件
    activity_main.xml
    （1）、根节点变成了layout，里面包括了data节点和传统的布局.
    （2）、这里的data节点作用是连接 View 和 Model 的桥梁.
    （3）、在这个data节点中声明一个variable变量，那值就可以轻松传到布局文件中来了
    （4）、TextView中没有给控件定义id，而是在text的时候用了@{ }的方法，
    在括号里面直接引用UserBean对象的属性即可完成赋值。-->
    <data>
        <!--如果import引入了两个相同的别名，就用alias别名来区分他们-->
        <!--<import-->
            <!--alias="man"-->
            <!--type="com.example.databinding_demo02.UserBean" />-->

        <import type="com.example.databinding_demo02.UserBean" />

        <!--variable节点的每一个变量都会在Binding辅助类中生成对应的getters和setters-->
        <variable
            name="man"
            type="com.example.databinding_demo02.UserBean" />

        <variable
            name="woman"
            type="com.example.databinding_demo02.UserBean" />
    </data>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_marginTop="20dp"
        android:orientation="vertical">

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_gravity="center_horizontal"
            android:text="@{`star:  `+man.name}"
            android:textColor="@color/colorPrimary"
            android:textSize="22sp" />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_gravity="center_horizontal"
            android:layout_marginTop="10dp"
            android:text="@{`star:  `+woman.name}"
            android:textColor="@color/colorAccent"
            android:textSize="22sp" />

    </LinearLayout>

</layout>
