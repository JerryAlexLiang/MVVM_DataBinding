<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android">

    <!--3、使用了DataBinding之后的Activity的布局文件
    activity_main.xml
    （1）、根节点变成了layout，里面包括了data节点和传统的布局.
    （2）、这里的data节点作用是连接 View 和 Model 的桥梁.
    （3）、在这个data节点中声明一个variable变量，那值就可以轻松传到布局文件中来了
    （4）、TextView中没有给控件定义id，而是在text的时候用了@{ }的方法，
    在括号里面直接引用UserBean对象的属性即可完成赋值。-->
    <data>

        <import type="com.example.databinding_demo01.UserBean" />

        <!--variable节点的每一个变量都会在Binding辅助类中生成对应的getters和setters-->
        <variable
            name="user"
            type="com.example.databinding_demo01.UserBean" />

        <!--点击事件方法2通过属性设置，布局中引入OnClickListener的变量,在控件中通过@{}来设置自己的点击事件-->
        <variable
            name="Onclicklistener"
            type="android.view.View.OnClickListener" />

        <!--布局属性之静态方法调用，达到对数据进行转换的目的-->
        <import type="com.example.databinding_demo01.Utils" />
    </data>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_marginTop="20dp"
        android:orientation="vertical">

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_gravity="center_horizontal"
            android:text="@{`姓名：`+user.name}"
            android:textColor="@color/colorPrimary"
            android:textSize="20sp" />

        <!--注意：这里age是int类型，必须转化为String，否则会运行时异常-->
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_gravity="center_horizontal"
            android:text="@{`年龄：`+String.valueOf(user.age)}"
            android:textColor="@color/colorAccent"
            android:textSize="18sp" />

        <!--事件处理方法1-->
        <Button
            android:id="@+id/btn_click"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_margin="10dp"
            android:text="@string/btn_name_one" />

        <!--点击事件方法2通过属性设置，布局中引入OnClickListener的变量,在控件中通过@{}来设置自己的点击事件-->
        <Button
            android:id="@+id/btn_next_one"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_margin="10dp"
            android:onClick="@{Onclicklistener}"
            android:text="@string/btn_name_two" />

        <Button
            android:id="@+id/btn_next_two"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_margin="10dp"
            android:onClick="@{Onclicklistener}"
            android:text="@string/btn_name_two" />

        <!--布局属性之静态方法调用，达到对数据进行转换的目的-->
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_gravity="center_horizontal"
            android:layout_marginTop="10dp"
            android:text="@{Utils.getName(user)}"
            android:textColor="@color/colorAccent"
            android:textSize="20sp" />

    </LinearLayout>

</layout>
